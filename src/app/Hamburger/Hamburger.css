*,
*::after,
*::before {
    box-sizing: border-box;
}

:root {
    --bar-width: 50px;
    --bar-height: 8px;
    --hamburger-gap: 6px;
    --foreground: #334b5c;
    --background: #e1d9d3;
    --hamburger-margin: 8px;
    --animation-timing: 200ms ease-in-out;
    --hamburger-height: calc(var(--bar-height) * 3 + var(--hamburger-gap) * 2);
}

.hamburger-menu {

    /* this is calculating the Hamburger height by the square root of 2 */
    --x-width: calc(var(--hamburger-height) * 1.41421356237);

    display: flex;
    flex-direction: column;
    gap: var(--hamburger-gap);
    color: var(--foreground);
    width: max-content;
    position: absolute;
    top: var(--hamburger-margin);
    right: var(--hamburger-margin);
    z-index: 2;
    cursor: pointer;
}

/* switching color scheme on click */
.hamburger-menu:has(input:checked) {
    --foreground: #e1d9d3;
    --background: #334b5c;
}

/* accessibility focus that isn't working */
.hamburger-menu:has(input:focus-visible)::before,
.hamburger-menu:has(input:focus-visible)::after,
.hamburger-menu input:focus-visible {
    border: 1px solid var(--background);
    box-shadow: 0 0 0 1px var(--foreground);
}



.hamburger-menu::before,
.hamburger-menu::after,
.hamburger-menu input {
    content: "";
    width: var(--bar-width);
    height: var(--bar-height);
    background-color: var(--foreground);
    border-radius: 9999px;
    transform-origin: right center;
    transition: opacity var(--animation-timing), width var(--animation-timing),
        rotate var(--animation-timing), translate var(--animation-timing),
        background-color var(--animation-timing), ;
}

.sidebar {
    transition: translate var(--animation-timing);
    /* translate: -100%; */
    transform: translateX(100%);

    position: fixed;
    top: 0;
    right: 0;

    padding: 0.5rem 1rem;
    padding-top: calc(var(--hamburger-height) + 2rem);
    background-color: var(--foreground);
    color: var(--background);
    width: 10rem;
    min-height: 100vh;
}

.hamburger-menu:has(input:checked)+.sidebar {
    /* translate: 0; */
    transform: translateX(0);
}

/* has selector basically doing some conditional logic here */
.hamburger-menu:has(input:checked)::before {
    rotate: -45deg;
    width: var(--x-width);
    /* adjusting the bar height */
    translate: 0 calc(var(--bar-height) / -2);
}

.hamburger-menu:has(input:checked)::after {
    rotate: 45deg;
    width: var(--x-width);
    translate: 0 calc(var(--bar-height) / 2);
}

.hamburger-menu input {
    appearance: none;
    padding: 0;
    margin: 0;
    outline: none;
    pointer-events: none;
}

.hamburger-menu input:checked {
    opacity: 0;
    width: 0;
}